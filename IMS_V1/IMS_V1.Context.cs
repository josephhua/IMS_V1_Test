//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace IMS_V1
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class IMS_V1Entities : DbContext
    {
        public IMS_V1Entities()
            : base("name=IMS_V1Entities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<ABC_Lookup> ABC_Lookup { get; set; }
        public DbSet<APlusItem> APlusItems { get; set; }
        public DbSet<Attribute_Lookup> Attribute_Lookup { get; set; }
        public DbSet<AttributeType> AttributeTypes { get; set; }
        public DbSet<Buyer> Buyers { get; set; }
        public DbSet<CategoryAttribute> CategoryAttributes { get; set; }
        public DbSet<CategoryClass> CategoryClasses { get; set; }
        public DbSet<Country> Countries { get; set; }
        public DbSet<FFLType> FFLTypes { get; set; }
        public DbSet<FineLineClass> FineLineClasses { get; set; }
        public DbSet<Freight_Lookup> Freight_Lookup { get; set; }
        public DbSet<ImportedItem> ImportedItems { get; set; }
        public DbSet<ImportFile> ImportFiles { get; set; }
        public DbSet<ItemDescriptionOrder> ItemDescriptionOrders { get; set; }
        public DbSet<Item> Items { get; set; }
        public DbSet<ItemTextAttachment> ItemTextAttachments { get; set; }
        public DbSet<ItemWareHous> ItemWareHouses { get; set; }
        public DbSet<PrintedItemsForAPlu> PrintedItemsForAPlus { get; set; }
        public DbSet<ReplacementItem> ReplacementItems { get; set; }
        public DbSet<ReplacementItemCode> ReplacementItemCodes { get; set; }
        public DbSet<StateProvince> StateProvinces { get; set; }
        public DbSet<SubClass> SubClasses { get; set; }
        public DbSet<UM_Lookup> UM_Lookup { get; set; }
        public DbSet<User> Users { get; set; }
        public DbSet<UserType> UserTypes { get; set; }
        public DbSet<VendorEdiContact> VendorEdiContacts { get; set; }
        public DbSet<VendorPhoneFax> VendorPhoneFaxes { get; set; }
        public DbSet<VendorSetup> VendorSetups { get; set; }
        public DbSet<VendorSetupAddr> VendorSetupAddrs { get; set; }
        public DbSet<VendorTradeName> VendorTradeNames { get; set; }
        public DbSet<WareHouse_Lookup> WareHouse_Lookup { get; set; }
        public DbSet<WebCode> WebCodes { get; set; }
        public DbSet<zManufacturersLogo> zManufacturersLogoes { get; set; }
        public DbSet<zManufacturersLogo_History> zManufacturersLogo_History { get; set; }
        public DbSet<ItemAttribute> ItemAttributes { get; set; }
        public DbSet<UploadFile> UploadFiles { get; set; }
        public DbSet<emailList> emailLists { get; set; }
        public DbSet<UsefulImage> UsefulImages { get; set; }
    
        public virtual ObjectResult<APlusImport_ITBAL_Result> APlusImport_ITBAL()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<APlusImport_ITBAL_Result>("APlusImport_ITBAL");
        }
    
        public virtual ObjectResult<APlusImport_ITMST_Result> APlusImport_ITMST()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<APlusImport_ITMST_Result>("APlusImport_ITMST");
        }
    
        public virtual ObjectResult<GetExistingLongDescriptions_Result> GetExistingLongDescriptions(Nullable<int> itemId)
        {
            var itemIdParameter = itemId.HasValue ?
                new ObjectParameter("ItemId", itemId) :
                new ObjectParameter("ItemId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetExistingLongDescriptions_Result>("GetExistingLongDescriptions", itemIdParameter);
        }
    
        public virtual ObjectResult<GetExistingWareHousesList_Result> GetExistingWareHousesList(Nullable<int> item_Id)
        {
            var item_IdParameter = item_Id.HasValue ?
                new ObjectParameter("Item_Id", item_Id) :
                new ObjectParameter("Item_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetExistingWareHousesList_Result>("GetExistingWareHousesList", item_IdParameter);
        }
    
        public virtual ObjectResult<GetLongDescription_Result> GetLongDescription(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetLongDescription_Result>("GetLongDescription", idParameter);
        }
    
        public virtual ObjectResult<GetRemainingAttributeTypes_Result> GetRemainingAttributeTypes(Nullable<int> itemId)
        {
            var itemIdParameter = itemId.HasValue ?
                new ObjectParameter("ItemId", itemId) :
                new ObjectParameter("ItemId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetRemainingAttributeTypes_Result>("GetRemainingAttributeTypes", itemIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> GetNewItem(Nullable<int> itemId, Nullable<int> userId)
        {
            var itemIdParameter = itemId.HasValue ?
                new ObjectParameter("ItemId", itemId) :
                new ObjectParameter("ItemId", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetNewItem", itemIdParameter, userIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> GetNewVendorNum()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetNewVendorNum");
        }
    }
}
